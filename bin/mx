#!/bin/bash

# mx

set -o errexit
set -o nounset

get_abs_filename() {
  # $1 : relative filename
  echo "$(cd "$(dirname "$1")" && pwd)/"$(basename "$1")""
}

# Are we in a tmux session?
if [[ -n ${TMUX:-} ]]; then
  inside_tmux_session=1
  TMUX= # clear out the TMUX variable locally so we can create (non-nested) sessions
else
  inside_tmux_session=0
fi
readonly inside_tmux_session

# How should we use the tmux command?
if which tmux 1>/dev/null; then
  readonly tmux_cmd="tmux -2"
elif [[ -x /usr/bin/tmux ]]; then
  readonly tmux_cmd="/usr/bin/tmux -2"
elif [[ -x /usr/local/bin/tmux ]]; then
  readonly tmux_cmd="/usr/local/bin/tmux -2"
else
  echo "Could not find tmux on your system. Try adding it to your \$PATH?" 1>&2
  exit -1
fi

# What is our projects directory?
if [[ -n ${PROJECTS:-} ]]; then
  readonly projects_directory=$PROJECTS
elif [[ -d ~/Projects ]]; then
  readonly projects_directory=~/Projects
elif [[ -d ~/projects ]]; then
  readonly projects_directory=~/projects
else
  readonly projects_directory=~
fi

# What session do we want to connect to? (and what directory should it be in?)
if [[ $# = 0 ]]; then
  session="$(basename $PWD)"
  session_path=$PWD
elif [[ -d $1 ]]; then
  session="$(basename $1)"
  session_path=$(get_abs_filename $1)
elif [[ -d "$projects_directory/$1" ]]; then
  session=$1
  session_path="$projects_directory/$session"
else
  session=$1
  session_path=$PWD
fi
readonly session="${session//./_}" # replace dots with underscores
readonly session_path

# What is our default editor?
if [[ -n ${EDITOR:-} ]]; then
  readonly editor=$EDITOR
else
  readonly editor=$(which vim)
fi

# Create the session, if it doesn't already exist
if ! ($tmux_cmd list-sessions | cut -d':' -f1 | grep -q ^"$session"\$); then
  if [[ -x "$session_path"/.tmux ]]; then
    cd "$session_path"
    "$PWD"/.tmux "$session"
  else
    $tmux_cmd new-session -c "$session_path" -s "$session" -n editor -d
    $tmux_cmd send-keys -t "$session" "$editor" C-m
    $tmux_cmd new-window -c "$session_path" -n shell -t "$session"

    $tmux_cmd select-window -t "$session":1
  fi
fi

# Connect to the session
if [[ $inside_tmux_session = 1 ]]; then
  $tmux_cmd switch-client -t "$session"
else
  $tmux_cmd attach-session -t "$session" -c "$session_path"
fi
